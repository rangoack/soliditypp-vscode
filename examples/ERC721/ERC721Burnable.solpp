// SPDX-License-Identifier: MIT
// Migrate from OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Burnable.sol)
// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Burnable.sol

pragma soliditypp ^0.8.0;

import "./ERC721.solpp";
import "./utils/Context.solpp";

/**
 * @title ERC721 Burnable Token
 * @dev ERC721 Token that can be irreversibly burned (destroyed).
 */
abstract contract ERC721Burnable is Context, ERC721 {
    /**
     * @dev Burns `_tokenId`. See {ERC721-_burn}.
     *
     * Requirements:
     *
     * - The caller must own `_tokenId` or be an approved operator.
     */
    function burn(uint256 _tokenId) public async virtual {
        //solhint-disable-next-line max-line-length
        require(_isApprovedOrOwner(_msgSender(), _tokenId), "ERC721Burnable: caller is not owner nor approved");
        _burn(_tokenId);
    }
}